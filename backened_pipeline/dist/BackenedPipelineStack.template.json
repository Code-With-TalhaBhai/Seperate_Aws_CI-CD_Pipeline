{
 "Resources": {
  "newTableD7E8D200": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "CI-CD_FirstTable"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/newTable/Resource"
   }
  },
  "MyProjectRole9BBE5233": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/MyProject/Role/Resource"
   }
  },
  "MyProjectRoleDefaultPolicyB19B7C29": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "MyProject39F7B0AE"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "MyProject39F7B0AE"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:BatchPutCodeCoverages",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:UpdateReport"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "MyProject39F7B0AE"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "mycodepipelineArtifactsBucketBD5E5995",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "mycodepipelineArtifactsBucketBD5E5995",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MyProjectRoleDefaultPolicyB19B7C29",
    "Roles": [
     {
      "Ref": "MyProjectRole9BBE5233"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/MyProject/Role/DefaultPolicy/Resource"
   }
  },
  "MyProject39F7B0AE": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:3.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "MyProjectRole9BBE5233",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"nodejs\": 12\n      },\n      \"commands\": [\n        \"cd backened_pipeline\",\n        \"npm install\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"npm run build\",\n        \"npx cdk synth\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"base-directory\": \"./backened_pipeline/cdk.out\",\n    \"files\": [\n      \"BackenedPipelineStack.template.json\"\n    ]\n  }\n}",
     "Type": "NO_SOURCE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "EncryptionKey": "alias/aws/s3"
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/MyProject/Resource"
   }
  },
  "mycodepipelineArtifactsBucketBD5E5995": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "aws:kms"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/mycodepipeline/ArtifactsBucket/Resource"
   }
  },
  "mycodepipelineArtifactsBucketPolicyE618E77C": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "mycodepipelineArtifactsBucketBD5E5995"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "mycodepipelineArtifactsBucketBD5E5995",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "mycodepipelineArtifactsBucketBD5E5995",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/mycodepipeline/ArtifactsBucket/Policy/Resource"
   }
  },
  "mycodepipelineRoleFFC19947": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/mycodepipeline/Role/Resource"
   }
  },
  "mycodepipelineRoleDefaultPolicyC8E2FDB7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "mycodepipelineArtifactsBucketBD5E5995",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "mycodepipelineArtifactsBucketBD5E5995",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "mycodepipelineBuildStageCodeBuildCodePipelineActionRole25B74212",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "mycodepipelineDeploymentStageDeployAwsCodePipelineActionRole1E2AE2B2",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "mycodepipelineRoleDefaultPolicyC8E2FDB7",
    "Roles": [
     {
      "Ref": "mycodepipelineRoleFFC19947"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/mycodepipeline/Role/DefaultPolicy/Resource"
   }
  },
  "mycodepipelineEBACCD76": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "mycodepipelineRoleFFC19947",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "ThirdParty",
         "Provider": "GitHub",
         "Version": "1"
        },
        "Configuration": {
         "Owner": "Code-With-TalhaBhai",
         "Repo": "Seperate_Aws_CI-CD_Pipeline",
         "Branch": "Main",
         "OAuthToken": "{{resolve:secretsmanager:my-github-secret-token:SecretString:::}}",
         "PollForSourceChanges": false
        },
        "Name": "Github_source",
        "OutputArtifacts": [
         {
          "Name": "Artifact_Source_Stage_Github_source"
         }
        ],
        "RunOrder": 1
       }
      ],
      "Name": "Source_Stage"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "MyProject39F7B0AE"
         }
        },
        "InputArtifacts": [
         {
          "Name": "Artifact_Source_Stage_Github_source"
         }
        ],
        "Name": "Code_Build",
        "OutputArtifacts": [
         {
          "Name": "Artifact_Build_Stage_Code_Build"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "mycodepipelineBuildStageCodeBuildCodePipelineActionRole25B74212",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Build_Stage"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Deploy",
         "Owner": "AWS",
         "Provider": "CloudFormation",
         "Version": "1"
        },
        "Configuration": {
         "StackName": "BackenedPipelineStack",
         "Capabilities": "CAPABILITY_NAMED_IAM",
         "RoleArn": {
          "Fn::GetAtt": [
           "mycodepipelineDeploymentStageDeployAwsRole5A2899B7",
           "Arn"
          ]
         },
         "ActionMode": "CREATE_UPDATE",
         "TemplatePath": "Artifact_Build_Stage_Code_Build::BackenedPipelineStack.template.json"
        },
        "InputArtifacts": [
         {
          "Name": "Artifact_Build_Stage_Code_Build"
         }
        ],
        "Name": "Deploy_Aws",
        "RoleArn": {
         "Fn::GetAtt": [
          "mycodepipelineDeploymentStageDeployAwsCodePipelineActionRole1E2AE2B2",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "DeploymentStage"
     }
    ],
    "ArtifactStore": {
     "Location": {
      "Ref": "mycodepipelineArtifactsBucketBD5E5995"
     },
     "Type": "S3"
    },
    "Name": "First-Custom-Pipeline",
    "RestartExecutionOnUpdate": true
   },
   "DependsOn": [
    "mycodepipelineRoleDefaultPolicyC8E2FDB7",
    "mycodepipelineRoleFFC19947"
   ],
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/mycodepipeline/Resource"
   }
  },
  "mycodepipelineSourceStageGithubsourceWebhookResource183D61EE": {
   "Type": "AWS::CodePipeline::Webhook",
   "Properties": {
    "Authentication": "GITHUB_HMAC",
    "AuthenticationConfiguration": {
     "SecretToken": "{{resolve:secretsmanager:my-github-secret-token:SecretString:::}}"
    },
    "Filters": [
     {
      "JsonPath": "$.ref",
      "MatchEquals": "refs/heads/{Branch}"
     }
    ],
    "TargetAction": "Github_source",
    "TargetPipeline": {
     "Ref": "mycodepipelineEBACCD76"
    },
    "TargetPipelineVersion": 1,
    "RegisterWithThirdParty": true
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/mycodepipeline/Source_Stage/Github_source/WebhookResource"
   }
  },
  "mycodepipelineBuildStageCodeBuildCodePipelineActionRole25B74212": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/mycodepipeline/Build_Stage/Code_Build/CodePipelineActionRole/Resource"
   }
  },
  "mycodepipelineBuildStageCodeBuildCodePipelineActionRoleDefaultPolicy2D8FC1CF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MyProject39F7B0AE",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "mycodepipelineBuildStageCodeBuildCodePipelineActionRoleDefaultPolicy2D8FC1CF",
    "Roles": [
     {
      "Ref": "mycodepipelineBuildStageCodeBuildCodePipelineActionRole25B74212"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/mycodepipeline/Build_Stage/Code_Build/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "mycodepipelineDeploymentStageDeployAwsCodePipelineActionRole1E2AE2B2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/mycodepipeline/DeploymentStage/Deploy_Aws/CodePipelineActionRole/Resource"
   }
  },
  "mycodepipelineDeploymentStageDeployAwsCodePipelineActionRoleDefaultPolicyF2F89795": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "mycodepipelineDeploymentStageDeployAwsRole5A2899B7",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "mycodepipelineArtifactsBucketBD5E5995",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "mycodepipelineArtifactsBucketBD5E5995",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cloudformation:CreateStack",
        "cloudformation:DescribeStack*",
        "cloudformation:GetStackPolicy",
        "cloudformation:GetTemplate*",
        "cloudformation:SetStackPolicy",
        "cloudformation:UpdateStack",
        "cloudformation:ValidateTemplate"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cloudformation:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":stack/BackenedPipelineStack/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "mycodepipelineDeploymentStageDeployAwsCodePipelineActionRoleDefaultPolicyF2F89795",
    "Roles": [
     {
      "Ref": "mycodepipelineDeploymentStageDeployAwsCodePipelineActionRole1E2AE2B2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/mycodepipeline/DeploymentStage/Deploy_Aws/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "mycodepipelineDeploymentStageDeployAwsRole5A2899B7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudformation.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/mycodepipeline/DeploymentStage/Deploy_Aws/Role/Resource"
   }
  },
  "mycodepipelineDeploymentStageDeployAwsRoleDefaultPolicyC0ECC5BA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "mycodepipelineArtifactsBucketBD5E5995",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "mycodepipelineArtifactsBucketBD5E5995",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "*",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "mycodepipelineDeploymentStageDeployAwsRoleDefaultPolicyC0ECC5BA",
    "Roles": [
     {
      "Ref": "mycodepipelineDeploymentStageDeployAwsRole5A2899B7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/mycodepipeline/DeploymentStage/Deploy_Aws/Role/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02O3Q6CMAyFn4X7UX8v9FZewKCJl2ZsNRbGShhozLJ3FzcSuTpfT9vTbmG/hU0m3y5XuskNVeAvg1SNmKy71x8rW9aTeZWVQVE8bIQgFGusRjIa/LnnGtXwa84YBMkWfMlpJeqZDalPHIqUIjrq0JDFKWWmOLHgG1ZP5iYItwN/GlWD8dJMSf7ZyzoEUaLjsVfpiwUXbDUNxDYIO30BtVu9Ngc4wjqrHVHej3agFqFM+gV32DRnJgEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "BackenedPipelineStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}